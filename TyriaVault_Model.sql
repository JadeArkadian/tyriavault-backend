CREATE SCHEMA IF NOT EXISTS schema_tyriavault;

CREATE  TABLE schema_tyriavault.achievements ( 
	id                   integer  NOT NULL  ,
	name_es              text  NOT NULL  ,
	name_fr              text  NOT NULL  ,
	name_en              text  NOT NULL  ,
	name_de              text  NOT NULL  ,
	description_es       text    ,
	description_fr       text    ,
	description_en       text    ,
	description_de       text    ,
	achievement_type     varchar(60)  NOT NULL  ,
	flags                jsonb    ,
	icon                 text    ,
	last_fetched         timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	CONSTRAINT pk_achievements PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.currencies ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	name_es              varchar(100)    ,
	name_fr              varchar(100)    ,
	name_en              varchar(100)    ,
	name_de              varchar(100)    ,
	icon_url             varchar    ,
	CONSTRAINT pk_currencies PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.emotes ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	command              varchar(50)  NOT NULL  ,
	CONSTRAINT pk_emotes_0 PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.genders ( 
	id                   integer  NOT NULL  ,
	name_es              varchar(100)  NOT NULL  ,
	name_fr              varchar(100)  NOT NULL  ,
	name_en              varchar(100)  NOT NULL  ,
	name_de              varchar(100)  NOT NULL  ,
	CONSTRAINT pk_genders PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.item_types ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	name_es              varchar(100)  NOT NULL  ,
	name_fr              varchar(100)  NOT NULL  ,
	name_en              varchar(100)  NOT NULL  ,
	name_de              varchar(100)  NOT NULL  ,
	CONSTRAINT pk_item_type PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.professions ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	name_es              varchar(100)  NOT NULL  ,
	name_fr              varchar(100)  NOT NULL  ,
	name_en              varchar(100)  NOT NULL  ,
	name_de              varchar(100)  NOT NULL  ,
	CONSTRAINT pk_professions PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.races ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	name_es              varchar(100)  NOT NULL  ,
	name_fr              varchar(100)  NOT NULL  ,
	name_en              varchar(100)  NOT NULL  ,
	name_de              varchar(100)  NOT NULL  ,
	CONSTRAINT pk_races PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.rarities ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	name_es              varchar(100)  NOT NULL  ,
	name_fr              varchar(100)  NOT NULL  ,
	name_en              varchar(100)  NOT NULL  ,
	name_de              varchar(100)  NOT NULL  ,
	CONSTRAINT pk_rarities PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.worlds ( 
	id                   integer  NOT NULL  ,
	name_es              varchar(100)  NOT NULL  ,
	name_fr              varchar(100)  NOT NULL  ,
	name_en              varchar(100)  NOT NULL  ,
	name_de              varchar(100)  NOT NULL  ,
	CONSTRAINT pk_worlds PRIMARY KEY ( id )
 );

CREATE  TABLE schema_tyriavault.game_accounts ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	account_name         varchar(80)  NOT NULL  ,
	world_id             integer DEFAULT 0 NOT NULL  ,
	creation_date        timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	fractal_level        integer DEFAULT 1 NOT NULL  ,
	last_modified        timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	CONSTRAINT pk_game_accounts PRIMARY KEY ( id ),
	CONSTRAINT fk_game_accounts_worlds FOREIGN KEY ( world_id ) REFERENCES schema_tyriavault.worlds( id )  ON UPDATE CASCADE 
 );

CREATE  TABLE schema_tyriavault.items_cache ( 
	id                   integer  NOT NULL  ,
	name_es              varchar(200)  NOT NULL  ,
	name_fr              varchar(200)  NOT NULL  ,
	name_en              varchar(200)  NOT NULL  ,
	name_de              varchar(200)  NOT NULL  ,
	item_type_id         integer  NOT NULL  ,
	icon                 text    ,
	rarity_id            integer  NOT NULL  ,
	item_level           integer    ,
	vendor_value         integer DEFAULT 0   ,
	flags                jsonb    ,
	last_fetched         timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	CONSTRAINT pk_items_cache PRIMARY KEY ( id ),
	CONSTRAINT fk_items_cache_item_type FOREIGN KEY ( item_type_id ) REFERENCES schema_tyriavault.item_types( id ) ON DELETE CASCADE ON UPDATE CASCADE ,
	CONSTRAINT fk_items_cache_rarities FOREIGN KEY ( rarity_id ) REFERENCES schema_tyriavault.rarities( id ) ON DELETE CASCADE ON UPDATE CASCADE 
 );

CREATE INDEX idx_items_cache_1 ON schema_tyriavault.items_cache  ( rarity_id );

CREATE INDEX idx_items_cache_0 ON schema_tyriavault.items_cache  ( item_type_id );

CREATE  TABLE schema_tyriavault.unlocked_emotes ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	game_account_id      integer  NOT NULL  ,
	emote_id             integer  NOT NULL  ,
	CONSTRAINT pk_emotes PRIMARY KEY ( id ),
	CONSTRAINT unq_unlocked_emotes UNIQUE ( game_account_id, emote_id ) ,
	CONSTRAINT fk_unlocked_emotes_emotes FOREIGN KEY ( emote_id ) REFERENCES schema_tyriavault.emotes( id )   ,
	CONSTRAINT fk_unlocked_emotes_game_accounts FOREIGN KEY ( game_account_id ) REFERENCES schema_tyriavault.game_accounts( id )   
 );

CREATE INDEX idx_unlocked_emotes ON schema_tyriavault.unlocked_emotes  ( game_account_id );

CREATE  TABLE schema_tyriavault.wallet ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	currency_id          integer DEFAULT 0 NOT NULL  ,
	game_account_id      integer  NOT NULL  ,
	amount               integer DEFAULT 0   ,
	CONSTRAINT pk_wallet PRIMARY KEY ( id ),
	CONSTRAINT unq_wallet UNIQUE ( currency_id, game_account_id ) ,
	CONSTRAINT fk_wallet_game_accounts FOREIGN KEY ( game_account_id ) REFERENCES schema_tyriavault.game_accounts( id ) ON DELETE CASCADE ON UPDATE CASCADE ,
	CONSTRAINT fk_wallet_currencies FOREIGN KEY ( currency_id ) REFERENCES schema_tyriavault.currencies( id ) ON DELETE CASCADE ON UPDATE CASCADE 
 );

CREATE INDEX idx_wallet ON schema_tyriavault.wallet  ( game_account_id );

CREATE  TABLE schema_tyriavault.wallet_history ( 
	id                   bigint  NOT NULL GENERATED ALWAYS  AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	currency_id          integer  NOT NULL  ,
	game_account_id      integer  NOT NULL  ,
	amount               integer    ,
	snapshot_time        timestamptz DEFAULT CURRENT_TIMESTAMP NOT NULL  ,
	CONSTRAINT pk_wallet_history PRIMARY KEY ( id ),
	CONSTRAINT fk_wallet_history_currencies FOREIGN KEY ( currency_id ) REFERENCES schema_tyriavault.currencies( id )   ,
	CONSTRAINT fk_wallet_history_game_accounts FOREIGN KEY ( game_account_id ) REFERENCES schema_tyriavault.game_accounts( id )   
 );

CREATE INDEX idx_wallet_history ON schema_tyriavault.wallet_history  ( game_account_id );

CREATE UNIQUE INDEX unq_wallet_history ON schema_tyriavault.wallet_history ( game_account_id, currency_id, snapshot_time );

CREATE  TABLE schema_tyriavault.characters ( 
	id                   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1  MINVALUE 0  ) ,
	game_account_id      integer  NOT NULL  ,
	name                 varchar(100)  NOT NULL  ,
	race_id              integer  NOT NULL  ,
	gender_id            integer DEFAULT 0 NOT NULL  ,
	profession_id        integer  NOT NULL  ,
	char_level           integer DEFAULT 1 NOT NULL  ,
	CONSTRAINT pk_characters PRIMARY KEY ( id ),
	CONSTRAINT unq_name_characters UNIQUE ( name ) ,
	CONSTRAINT fk_characters_genders FOREIGN KEY ( gender_id ) REFERENCES schema_tyriavault.genders( id ) ON DELETE CASCADE ON UPDATE CASCADE ,
	CONSTRAINT fk_characters_races FOREIGN KEY ( race_id ) REFERENCES schema_tyriavault.races( id ) ON DELETE CASCADE ON UPDATE CASCADE ,
	CONSTRAINT fk_characters_professions FOREIGN KEY ( profession_id ) REFERENCES schema_tyriavault.professions( id ) ON DELETE CASCADE ON UPDATE CASCADE ,
	CONSTRAINT fk_characters_game_accounts FOREIGN KEY ( game_account_id ) REFERENCES schema_tyriavault.game_accounts( id )   
 );

CREATE INDEX idx_characters ON schema_tyriavault.characters  ( game_account_id );

CREATE  TABLE schema_tyriavault.item_details ( 
	item_id              integer  NOT NULL  ,
	details              jsonb  NOT NULL  ,
	CONSTRAINT pk_item_details PRIMARY KEY ( item_id ),
	CONSTRAINT fk_item_details_items_cache FOREIGN KEY ( item_id ) REFERENCES schema_tyriavault.items_cache( id ) ON DELETE CASCADE ON UPDATE CASCADE 
 );

CREATE INDEX idx_item_details ON schema_tyriavault.item_details  ( details  ) USING GIN;

